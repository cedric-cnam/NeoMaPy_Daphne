# -*- coding: utf-8 -*-
"""
Created on 20/08/2022
Last update 20/08/2022

@author: Victor
"""

import json
import time


##############################################################################################################
##############################################################################################################
############################################## LOAD the data #################################################

with open('.\..\..\Data_Json\Dictionnary\dicoConfNodes.json', 'r') as f: 	
#with open('.\..\..\Data_Json\Dictionnary\\60Dico.json', 'r') as f: 
    dico = json.load(f)

ListeOfDicos = []

for k,v in dico.items():
    buildNewDico = True
    for dico in ListeOfDicos:
        for key,value in dico.items():
            if int(k) in value[1] or (set(v[1]) & set(value[1])):
                dico[k] = v 
                buildNewDico = False
                break
    if buildNewDico:
        ListeOfDicos.append({k:v})         
        

list_size = []
for dico in ListeOfDicos:
    list_size.append(len(dico))
print(f'list = {list_size}')
##############################################################################################################
##############################################################################################################

# Creation of the json file of this dictionnary    
fichier = open("listOfDico.json", "w")

i = 1

fichier.write("{\n")
fichier.write("\t \"list\": [\n")
for dico in ListeOfDicos:
    fichier.write("\t\t")

    fichier.write("{")
    size = len(dico)
    j = 1
    for (k,v) in dico.items():
        fichier.write("\"")
        fichier.write(str(k))
        fichier.write("\": [")
        fichier.write(str(v[0]))
        fichier.write(", ")
        fichier.write(str(v[1]))
        if j != size:    
            fichier.write("],")
        else:
            fichier.write("]")
        j += 1
    fichier.write("}")

    if i < len(ListeOfDicos):
        fichier.write(", \n")
        i += 1
    else:
        fichier.write("\n")
fichier.write("\t ]\n")
fichier.write("}")

fichier.close() 
   
"""
{
    "5057": [0.13944, [5167, 5209, 5194]],
    "5143": [0.18037, [5180, 5209, 5167]],
    "5144": [0.15757, [5180, 5209, 5167]],
    "5147": [0.29257, [5180, 5209, 5167]],
    "5148": [0.8, [5180, 5167, 5209]],
    "5149": [0.20357999, [5209, 5180, 5167]],
    "5155": [0.38371998, [5180, 5194, 5209]],
    "5156": [0.14695999, [5194, 5209, 5180]],
    "5159": [0.20734999, [5180, 5209, 5194]],
    "5160": [0.14332, [5194, 5180, 5209]],
    "5161": [0.22918999, [5194, 5209, 5180]],
    "5168": [0.26022, [5194, 5167, 5209]],
    "5169": [0.29984, [5194, 5167, 5209]],
    "5172": [0.33808, [5209, 5194, 5167]],
    "5173": [0.26645, [5194, 5167, 5209]],
    "5174": [0.27183002, [5209, 5194, 5167]],
    "5181": [0.16092, [5167, 5194, 5209]],
    "5182": [0.14815, [5167, 5209, 5180]],
    "5183": [0.55429, [5180, 5167, 5209]],
    "5186": [0.54447997, [5167, 5209, 5180]],
    "5187": [0.2983, [5180, 5167, 5209]],
    "5188": [0.51616, [5167, 5180, 5209]],
    "5195": [0.1854, [5209, 5167, 5180]],
    "5197": [0.22493999, [5167, 5180, 5194]],
    "5198": [0.15463999, [5180, 5167, 5194]],
    "5201": [0.16687, [5180, 5194, 5167]],
    "5202": [0.26385, [5180, 5194, 5167]],
    "5203": [0.26022, [5180, 5194, 5167]],
    "5210": [0.15190999, [5194, 5180, 5167]],
    "5058": [0.19286999, [5180, 5194, 5167, 5209]],
    "5060": [0.3356, [5180, 5194, 5167, 5209]],
    "5061": [0.20495, [5180, 5167, 5194, 5209]],
    "5063": [0.35146, [5194, 5209, 5180, 5167]],
    "5064": [0.15555, [5194, 5180, 5167, 5209]],
    "5066": [0.14357999, [5194, 5167, 5209, 5180]],
    "5067": [0.14769, [5167, 5209, 5180, 5194]],
    "5070": [0.53992, [5209, 5180, 5167, 5194]],
    "5071": [0.34127, [5209, 5167, 5180, 5194]],
    "5074": [0.32369, [5194, 5209, 5167, 5180]],
    "5075": [0.25897998, [5180, 5167, 5194, 5209]],
    "5079": [0.37183002, [5194, 5167, 5209, 5180]],
    "5082": [0.16973999, [5180, 5167, 5209, 5194]],
    "5083": [0.16049, [5167, 5194, 5180, 5209]],
    "5084": [0.14001, [5209, 5167, 5194, 5180]],
    "5087": [0.14578, [5209, 5167, 5180, 5194]],
    "5088": [0.2748, [5194, 5167, 5180, 5209]],
    "5089": [0.21917, [5209, 5194, 5180, 5167]],
    "5090": [0.28458, [5194, 5180, 5167, 5209]],
    "5093": [0.24342, [5209, 5167, 5194, 5180]],
    "5094": [0.15715, [5209, 5167, 5180, 5194]],
    "5095": [0.17881, [5209, 5194, 5180, 5167]],
    "5096": [0.18549, [5180, 5194, 5167, 5209]],
    "5097": [0.16099, [5180, 5209, 5194, 5167]],
    "5100": [0.20705, [5180, 5209, 5167, 5194]],
    "5101": [0.18455, [5180, 5209, 5167, 5194]],
    "5102": [0.20172998, [5209, 5167, 5194, 5180]],
    "5104": [0.1656, [5194, 5180, 5209, 5167]],
    "5105": [0.29874, [5209, 5180, 5167, 5194]],
    "5108": [0.14102, [5194, 5167, 5180, 5209]],
    "5110": [0.43857998, [5167, 5180, 5194, 5209]],
    "5113": [0.23596999, [5180, 5167, 5209, 5194]],
    "5114": [0.41982, [5180, 5194, 5209, 5167]],
    "5117": [0.42330998, [5194, 5209, 5180, 5167]],
    "5118": [0.3105, [5180, 5167, 5194, 5209]],
    "5119": [0.38567, [5167, 5180, 5209, 5194]],
    "5122": [0.19487, [5209, 5167, 5180, 5194]],
    "5123": [0.26744002, [5167, 5209, 5194, 5180]],
    "5126": [0.37579, [5167, 5209, 5180, 5194]],
    "5127": [0.29529, [5209, 5194, 5180, 5167]],
    "5128": [0.26995, [5209, 5180, 5194, 5167]],
    "5132": [0.24288002, [5194, 5167, 5209, 5180]],
    "5133": [0.1452, [5167, 5209, 5180, 5194]],
    "5136": [0.18868999, [5180, 5167, 5209, 5194]],
    "5138": [0.17424999, [5209, 5194, 5180, 5167]],
    "5146": [0.46793, [5166, 5208, 5180, 5209, 5179, 5167]],
    "5185": [0.18617001, [5208, 5167, 5209, 5166, 5180, 5179]],
    "5158": [0.18799, [5208, 5154, 5179, 5194, 5209, 5180, 5193]],
    "5171": [0.16397001, [5166, 5193, 5167, 5154, 5209, 5208, 5194]],
    "5200": [0.19746, [5167, 5180, 5194, 5154, 5166, 5193, 5179]],
    "5069": [0.36273, [5209, 5180, 5193, 5154, 5166, 5194, 5167, 5208, 5179]],
    "5073": [0.1515, [5180, 5193, 5166, 5209, 5167, 5208, 5154, 5179, 5194]],
    "5077": [0.23533002, [5194, 5166, 5167, 5209, 5208, 5193, 5154, 5180, 5179]],
    "5086": [0.14552, [5154, 5166, 5180, 5179, 5209, 5193, 5208, 5167, 5194]],
    "5092": [0.31272, [5180, 5166, 5194, 5179, 5193, 5209, 5167, 5208, 5154]],
    "5099": [0.16049, [5167, 5166, 5194, 5154, 5209, 5208, 5180, 5179, 5193]],
    "5116": [0.21493001, [5180, 5194, 5179, 5208, 5166, 5154, 5209, 5167, 5193]],
    "5125": [0.17906, [5166, 5180, 5179, 5208, 5167, 5209, 5154, 5194, 5193]],
    "5135": [0.16815, [5208, 5193, 5179, 5194, 5154, 5167, 5180, 5166, 5209]],
    "5154": [0.39229, [5086, 5158, 5200, 5069, 5171, 5099, 5125, 5116, 5077, 5135, 5073, 5092]],
    "5193": [0.35146, [5069, 5171, 5135, 5086, 5073, 5092, 5125, 5077, 5158, 5116, 5200, 5099]],
    "5166": [0.26979, [5125, 5086, 5171, 5099, 5077, 5146, 5069, 5092, 5200, 5116, 5073, 5185, 5135]],
    "5179": [0.25639, [5125, 5086, 5158, 5116, 5135, 5092, 5146, 5099, 5200, 5073, 5069, 5077, 5185]],
    "5208": [0.19962, [5185, 5158, 5135, 5125, 5086, 5171, 5116, 5146, 5077, 5099, 5073, 5092, 5069]],
    "5194": [0.22692999, [5156, 5161, 5132, 5090, 5203, 5172, 5117, 5210, 5077, 5088, 5173, 5200, 5168, 5104, 5074, 5066, 5063, 5089, 5064, 5099, 5095, 5108, 5174, 5127, 5158, 5060, 5079, 5116, 5201, 5160, 5092, 5084, 5123, 5135, 5069, 5155, 5061, 5070, 5058, 5128, 5118, 5181, 5202, 5114, 5125, 5097, 5094, 5075, 5138, 5169, 5197, 5102, 5126, 5093, 5096, 5110, 5198, 5171, 5133, 5101, 5086, 5071, 5067, 5087, 5082, 5073, 5113, 5119, 5159, 5122, 5100, 5105, 5136, 5057, 5083]],
    "5180": [0.15423, [5101, 5198, 5060, 5064, 5104, 5197, 5066, 5160, 5186, 5110, 5127, 5087, 5210, 5203, 5200, 5118, 5096, 5116, 5069, 5128, 5125, 5187, 5075, 5070, 5086, 5159, 5082, 5201, 5202, 5100, 5113, 5095, 5058, 5089, 5092, 5183, 5061, 5148, 5114, 5097, 5149, 5117, 5144, 5155, 5073, 5090, 5084, 5067, 5088, 5105, 5119, 5123, 5147, 5094, 5143, 5146, 5188, 5136, 5133, 5158, 5122, 5071, 5099, 5079, 5108, 5126, 5161, 5195, 5077, 5138, 5185, 5102, 5063, 5135, 5083, 5182, 5156, 5132, 5093, 5074]],
    "5209": [0.38275, [5127, 5104, 5094, 5122, 5128, 5084, 5095, 5093, 5172, 5069, 5070, 5149, 5186, 5074, 5089, 5086, 5126, 5174, 5133, 5105, 5071, 5117, 5123, 5171, 5077, 5138, 5097, 5100, 5102, 5156, 5195, 5161, 5067, 5088, 5066, 5158, 5125, 5057, 5155, 5099, 5119, 5101, 5143, 5173, 5187, 5087, 5185, 5073, 5147, 5079, 5063, 5188, 5116, 5118, 5146, 5060, 5064, 5092, 5132, 5082, 5144, 5183, 5160, 5090, 5182, 5148, 5110, 5113, 5083, 5159, 5061, 5114, 5075, 5058, 5181, 5096, 5108, 5168, 5169, 5136, 5135]],
    "5167": [0.19332, [5200, 5126, 5099, 5182, 5067, 5186, 5188, 5185, 5093, 5173, 5133, 5066, 5057, 5197, 5198, 5132, 5183, 5084, 5088, 5125, 5119, 5174, 5094, 5148, 5102, 5113, 5071, 5110, 5064, 5143, 5075, 5147, 5172, 5086, 5060, 5087, 5073, 5136, 5195, 5097, 5058, 5092, 5135, 5210, 5089, 5104, 5074, 5101, 5063, 5095, 5201, 5096, 5127, 5114, 5123, 5122, 5083, 5187, 5181, 5171, 5070, 5077, 5108, 5079, 5061, 5100, 5118, 5090, 5116, 5082, 5168, 5203, 5149, 5169, 5105, 5069, 5138, 5146, 5117, 5128, 5144, 5202]]
    } 
"""